# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/

version: 2
jobs:
  build:
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #      - run:
      #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
      #         command: sudo chmod +x ./gradlew
      - run:
          name: Accept Licences
          command: (echo y; echo y; echo y; echo y; echo y; echo y) | sdkmanager --licenses
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests and Lints
          command: ./gradlew lint test
      - run:
          name: Build debug APK for Phone App
          command: ./gradlew :app:assembleDebug
      - run:
          name: Build debug APK for Watch Service
          command: ./gradlew :service:assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apk
      - store_artifacts:
          path: service/build/outputs/apk
          destination: apk
      - run:
          name: Move APKs to temp folder
          command: |
            mkdir -p persist/apks
            cp app/build/outputs/apk/app-debug.apk persist/apks/
            cp service/build/outputs/apk/service-debug.apk persist/apks/
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: persist
          # Must be relative path from root
          paths:
            - apks
  
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./apks
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION="edgy"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./apks/
            
            
workflows:
  version: 2
  main:
    jobs:
      - build
      - publish-github-release:
          requires:
            - build
